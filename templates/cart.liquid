{% form 'cart', cart %}
  <div class="cart-wrapper"></div>
  <h1 class="cart-title">Cart</h1>

  {% if cart.item_count == 0 %}
    <p>Your cart is empty.</p>
  {% else %}
    <table class="cart-table">
    
      <tbody>
        {% for item in cart.items %}
          <tr class="product-row">
            <td class="product-details">
              <a href="{{ item.url }}">
                <p>{{ item.title }}</p>
                <img src="{{ item.image | img_url: 'medium' }}" alt="{{ item.title }}" />
              </a>
            </td>
            <td class="quantity-row">
              <p>Qty :</p>
              <div class="qty-buttons">
              <button class="decrease" onclick="changeValue({{ item.id }}, -1, {{ item.price }})" type="button">-</button>
              <input class="number-input" id="number-{{ item.id }}" type="number" name="updates[{{ item.id }}]" value="{{ item.quantity }}" min="1" onchange="updateTotal({{ item.id }}, {{ item.price }})" />
              <button class="increase" onclick="changeValue({{ item.id }}, 1, {{ item.price }})" type="button">+</button>
              </div>
            </td>

            <td class="item-price-row">
              <p>Price</p>
              <p>{{ item.price | money }}</p>
              </td>
            <td class="total-price-row" id="total-{{ item.id }}">{{ item.line_price | money }}</td>
            <td>
              <button type="submit" name="updates[{{ item.id }}]" value="0">Remove</button>
            </td>
          </tr>
        {% endfor %}
      </tbody>
    </table>

    <!-- Bottom Cart Summary and Actions -->
    <div class="bottom-cart">
      <p id="cart-total">Total: {{ cart.total_price | money }}</p>
      <button type="submit" name="update">Update Cart</button>
      <button type="submit" name="checkout">Checkout</button>
    </div>
  {% endif %}
{% endform %}

<script>
  function changeValue(itemId, amount, price) {
    let input = document.getElementById('number-' + itemId);
    let newValue = Number(input.value) + amount;
    if (newValue >= 1) {
      input.value = newValue;
      updateTotal(itemId, price);  // Update total after changing quantity
    }
  }

  function updateTotal(itemId, price) {
    // Calculate new total for this item
    let quantity = document.getElementById('number-' + itemId).value;
    let itemTotal = quantity * price;
    
    // Update item's total display
    document.getElementById('total-' + itemId).innerText = formatMoney(itemTotal);

    // Recalculate and update cart total
    updateCartTotal();
  }

  function updateCartTotal() {
    let cartTotal = 0;
    
    // Loop through each item and add up the totals
    document.querySelectorAll('.total-price-row').forEach((element) => {
      let itemTotal = parseFloat(element.innerText.replace(/[^0-9.-]+/g, ""));
      cartTotal += itemTotal;
    });

    // Update cart total display
    document.getElementById('cart-total').innerText = 'Total: ' + formatMoney(cartTotal);
  }

  function formatMoney(amount) {
    return new Intl.NumberFormat('en-US', {
      style: 'currency',
      currency: 'USD',
    }).format(amount / 100);  // Assuming prices are in cents
  }
</script>

<style>
  /* General Styles */
  .quantity-row{
    display: flex;
    flex-direction: column;
    align-items: centers;
  }
  .qty-buttons{
    display: flex;
    flex-direction: row;
  }
  form {
    background-color: #E6EE87;
    margin: 0px;
  }

  /* Remove number input arrows */
  input[type="number"]::-webkit-outer-spin-button,
  input[type="number"]::-webkit-inner-spin-button {
    -webkit-appearance: none;
    margin: 0;
  }

  input[type="number"] {
    -moz-appearance: textfield;
    text-align: center;
    padding: 1rem;
  }

  /* Cart Table */
  .cart-table {
    width: 100%;
    border-collapse: collapse;
    font-family: 'Dela-Gothic-One';
    color: black;
  }

  .cart-table th, .cart-table td {
    padding: 1rem;
    text-align: left;
  }

  .cart-table th {
    background-color: #f2f2f2;
  }

  /* Product Row Styling */
  .cart-table .product-row {
    display: flex;
    flex-wrap: wrap;
    align-items: center;
    border-bottom: 1px solid #ccc;
    padding: 1rem 0;
  }

  .cart-table .product-details {
    flex: 2;
    display: flex;
    flex-direction: column;
    text-align: left;
  }

  .cart-table .quantity-row,
  .cart-table .item-price-row,
  .cart-table .total-price-row {
    flex: 1;
    display: flex;
    align-items: center;
    justify-content: space-around;
  }

  /* Bottom Cart */
  .bottom-cart {
    font-family: 'Dela-Gothic-One';
    padding: 2rem;
    font-size: 1rem;
    text-align: right;
  }

  .bottom-cart p {
    font-size: 1.2rem;
  }

  .bottom-cart button {
    margin-top: 1rem;
  }

  /* Responsive Adjustments */
  @media (max-width: 768px) {
    /* Hide table headers */
    .cart-table thead {
      display: none;
    }

    /* Stack product details vertically on smaller screens */
    .cart-table .product-row {
      flex-direction: column;
      align-items: flex-start;
    }

    .cart-table .quantity-row,
    .cart-table .item-price-row,
    .cart-table .total-price-row {
      justify-content: flex-start;
      width: 100%;
      padding: 0.5rem 0;
    }

    /* Adjust images */
    .cart-table img {
      max-width: 100px;
      margin-bottom: 0.5rem;
    }

    /* Bottom cart alignment for small screens */
    .bottom-cart {
      text-align: center;
    }

    .bottom-cart p {
      font-size: 1rem;
    }

    .bottom-cart button {
      width: 100%;
      margin: 0.5rem 0;
    }
  }

  /* Original Styles */
  .item-price-row {
    background-color: azure;
  }

  .cart-title {
    font-family: 'Dela-Gothic-One';
    margin: 0px;
  }

  td a p {
    font-family: 'Dela-Gothic-One';
    max-width: 50%;
  }

  td a {
    display: flex;
    flex-direction: column;
  }

  a img {
    max-width: 150px;
  }

  .increase, .decrease {
    background-color: #f9f9f9;
    border: none;
    padding: 10px;
  }

  .cart-table img {
    max-width: 150px;
  }
</style>
